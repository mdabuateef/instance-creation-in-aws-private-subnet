{
  "variables": {
    "aws_region": "ap-south-1",
    "instance_type": "t2.large",
    "ssh_username": "ubuntu",
    "source_instance_id": "ami-0ad21ae1d0696ad58",
    "ami_name": "hardened-ubuntu-{{timestamp}}"
  },
  "builders": [
    {
      "type": "amazon-instance",
      "region": "{{user `aws_region`}}",
      "access_key": "",
      "secret_key": "",
      "instance_type": "{{user `instance_type`}}",
      "source_instance_id": "{{user `source_instance_id`}}",
      "ssh_username": "{{user `ssh_username`}}",
      "ami_name": "{{user `ami_name`}}",
      "ami_description": "Hardened Ubuntu 20.04 AMI",
      "communicator": "ssh"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sudo apt update",
        "sudo apt install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common",
        "sudo apt install -y openjdk-11-jdk",
        "curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo gpg --dearmor -o /usr/share/keyrings/jenkins-keyring.gpg",
        "echo 'deb [signed-by=/usr/share/keyrings/jenkins-keyring.gpg] https://pkg.jenkins.io/debian-stable binary/' | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null",
        "sudo apt update",
        "sudo apt install -y jenkins",
        "sudo systemctl start jenkins",
        "sudo systemctl enable jenkins",
        "sudo sysctl -w vm.max_map_count=524288",
        "sudo sysctl -w fs.file-max=131072",
        "ulimit -n 131072",
        "ulimit -u 8192",
        "echo 'sonarqube   -   nofile   65536' | sudo tee -a /etc/security/limits.conf",
        "echo 'sonarqube   -   nproc    4096' | sudo tee -a /etc/security/limits.conf",
        "sudo apt update",
        "sudo apt install -y libc6-x32 libc6-i386",
        "wget https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.deb",
        "sudo dpkg -i jdk-17_linux-x64_bin.deb",
        "sudo apt-get update",
        "sudo apt-get clean",
        "sudo apt-get autoremove",
        "sudo apt --fix-broken install",
        "sudo dpkg -i jdk-17_linux-x64_bin.deb",
        "sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-17/bin/java 1",
        "sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk-17/bin/javac 1",
        "echo 'export SONAR_JAVA_PATH=/usr/lib/jvm/jdk-17/bin/java' | sudo tee -a /etc/profile.d/sonar_java.sh",
        "source /etc/profile.d/sonar_java.sh",
        "sudo apt install -y openjdk-17-jre-headless",
        "echo 'export JAVA_HOME=/usr/lib/jvm/jdk-17' | sudo tee -a /etc/environment",
        "source /etc/environment",
        "sudo sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list'",
        "wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -",
        "sudo apt-get update",
        "sudo apt-get -y install postgresql postgresql-contrib unzip",
        "sudo systemctl start postgresql",
        "sudo systemctl enable postgresql",
        "echo 'postgres:sonar' | sudo chpasswd",
        "sudo -u postgres createuser sonar",
        "sudo -u postgres psql -c \"ALTER USER sonar WITH ENCRYPTED password 'sonar';\"",
        "sudo -u postgres createdb sonarqube -O sonar",
        "sonar_link=$(curl -s https://www.sonarsource.com/products/sonarqube/downloads/success-download-community-edition/ | grep -o 'https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-[0-9.]*.zip')",
        "sudo wget \"$sonar_link\" -P /tmp",
        "sudo unzip -o \"/tmp/$(basename \"$sonar_link\")\" -d /opt",
        "sudo rm -rf /opt/sonarqube",
        "sudo mv /opt/sonarqube-* /opt/sonarqube",
        "if ! getent group sonar > /dev/null 2>&1; then sudo groupadd sonar; fi",
        "if ! id -u sonar > /dev/null 2>&1; then sudo useradd -c \"user to run SonarQube\" -d /opt/sonarqube -g sonar sonar; fi",
        "sudo chown sonar:sonar /opt/sonarqube -R",
        "sudo sed -i 's/#sonar.jdbc.username=/sonar.jdbc.username=sonar/' /opt/sonarqube/conf/sonar.properties",
        "sudo sed -i 's/#sonar.jdbc.password=/sonar.jdbc.password=sonar/' /opt/sonarqube/conf/sonar.properties",
        "sudo sed -i 's/#sonar.jdbc.url=jdbc:postgresql:\\/\\/localhost:5432\\/sonarqube/sonar.jdbc.url=jdbc:postgresql:\\/\\/localhost:5432\\/sonarqube/' /opt/sonarqube/conf/sonar.properties",
        "sudo sed -i 's/RUN_AS_USER=/RUN_AS_USER=sonar/' /opt/sonarqube/bin/linux-x86-64/sonar.sh",
        "sudo -u sonar /opt/sonarqube/bin/linux-x86-64/sonar.sh start",
        "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
        "sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl",
        "chmod +x kubectl",
        "mkdir -p ~/.local/bin",
        "mv ./kubectl ~/.local/bin/kubectl",
        "kubectl version",
        "curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"",
        "sudo apt install unzip",
        "unzip awscliv2.zip",
        "sudo ./aws/install",
        "aws --version",
        "ARCH=amd64",
        "PLATFORM=$(uname -s)_$ARCH",
        "curl -sLO \"https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz\"",
        "curl -sL \"https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt\" | grep $PLATFORM | sha256sum --check",
        "tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz",
        "sudo mv /tmp/eksctl /usr/local/bin"
      ]
    }
  ]
}
